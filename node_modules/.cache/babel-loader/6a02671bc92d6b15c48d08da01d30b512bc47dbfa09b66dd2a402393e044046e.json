{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mike Mambwe\\\\Desktop\\\\todo_list\\\\react_todo_list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*\nauthor: MIKE MAMBWE\nProgram: a react todo list APP\nContact: +260975854067\nEmail : engineermambwe@gmail.com\n*/\n//this program uses react hooks to store and output the information in it.\nimport React, { useState } from 'react';\nimport './App.css';\n//import statement are placed above this line \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //useState - hook\n  const [item, setItem] = useState(\"\");\n  //The array belew holds the values of the entered items on the list.\n  const [items, setNewItem] = useState([]);\n\n  //The helper function to help add values to the list.\n  function addItem() {\n    if (!item) {\n      alert(\"please Enter item!\");\n    }\n    const listItem = {\n      id: Math.floor(Math.random() * 1000),\n      value: items\n    };\n    setNewItem(oldList => [...oldList, listItem]);\n    setItem(\"\"); //this is reset to the default empty string.\n\n    console.log(items);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoList React APP!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Please enter...\",\n      value: item,\n      onChange: e => setItem(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: items.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {}, ite, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Tif0brYuBpAt5DSijvqxEk2FaFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","item","setItem","items","setNewItem","addItem","alert","listItem","id","Math","floor","random","value","oldList","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","map","ite","_c","$RefreshReg$"],"sources":["C:/Users/Mike Mambwe/Desktop/todo_list/react_todo_list/src/App.js"],"sourcesContent":["/*\nauthor: MIKE MAMBWE\nProgram: a react todo list APP\nContact: +260975854067\nEmail : engineermambwe@gmail.com\n*/\n//this program uses react hooks to store and output the information in it.\nimport React,{useState} from 'react';\nimport './App.css';\n//import statement are placed above this line \n\n\nfunction App() {\n  //useState - hook\n  const [item, setItem] = useState(\"\");\n  //The array belew holds the values of the entered items on the list.\n  const [items, setNewItem] = useState([]);\n\n  //The helper function to help add values to the list.\n  function addItem (){\n    if(!item){\n      alert(\"please Enter item!\")\n    }\n    const listItem = {\n      id: Math.floor(Math.random()* 1000),\n      value: items,\n\n    };\n    setNewItem(oldList => [...oldList, listItem])\n    setItem(\"\")//this is reset to the default empty string.\n\n    console.log(items)\n  }\n  \n  return (\n    <div className=\"App\">\n      {/* The header of this project is below this line. */}\n     <h1>TodoList React APP!</h1>\n      {/* The Input field and the button */}\n    <input type=\"text\"\n      placeholder='Please enter...'\n      value={item}\n      onChange={e => setItem(e.target.value)}\n    />\n    <button onClick={addItem}>Add</button>\n      {/*The unordered list of items to be added to the list. */}\n      <ol>\n       {\n        items.map(\n          item => {\n            return(\n              <li key={ite\n              }></li>\n            )\n          }\n        )\n       }\n      </ol>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAO,WAAW;AAClB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC;EACA,MAAM,CAACO,KAAK,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,SAASS,OAAOA,CAAA,EAAG;IACjB,IAAG,CAACJ,IAAI,EAAC;MACPK,KAAK,CAAC,oBAAoB,CAAC;IAC7B;IACA,MAAMC,QAAQ,GAAG;MACfC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAE,IAAI,CAAC;MACnCC,KAAK,EAAET;IAET,CAAC;IACDC,UAAU,CAACS,OAAO,IAAI,CAAC,GAAGA,OAAO,EAAEN,QAAQ,CAAC,CAAC;IAC7CL,OAAO,CAAC,EAAE,CAAC;;IAEXY,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;EACpB;EAEA,oBACEL,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAEnBnB,OAAA;MAAAmB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAE7BvB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAChBC,WAAW,EAAC,iBAAiB;MAC7BX,KAAK,EAAEX,IAAK;MACZuB,QAAQ,EAAEC,CAAC,IAAIvB,OAAO,CAACuB,CAAC,CAACC,MAAM,CAACd,KAAK;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvC,eACFvB,OAAA;MAAQ6B,OAAO,EAAEtB,OAAQ;MAAAY,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAEpCvB,OAAA;MAAAmB,QAAA,EAEEd,KAAK,CAACyB,GAAG,CACP3B,IAAI,IAAI;QACN,oBACEH,OAAA,WAAS+B,GAAG;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACL;MAEX,CAAC;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV;AAACrB,EAAA,CAhDQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}